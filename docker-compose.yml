services:
  # Neo4j Core Database
  neo4j:
    image: neo4j:5.22.0
    container_name: slowreader-neo4j
    restart: unless-stopped
    environment:
      - NEO4J_AUTH=neo4j/LetsNeo4j
      - NEO4J_PLUGINS=["apoc","apoc-extended","bloom","genai","graph-data-science","n10s"]
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - ./data/neo4j:/data
      - ./logs/neo4j:/logs
    healthcheck:
      test: ["CMD-SHELL", "cypher-shell -u neo4j -p LetsNeo4j 'RETURN 1' || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
      - backend

  # Neo4j MCP Server
  neo4j_mcp:
    build:
      context: ./mcp-neo4j-cypher
      dockerfile: Dockerfile
    container_name: neo4j_mcp
    restart: unless-stopped
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=LetsNeo4j
      - NEO4J_DATABASE=neo4j
    ports:
      - "8080:8080"
    depends_on:
      neo4j:
        condition: service_healthy
    networks:
      - backend

  # Streamlit Frontend App
  streamlit:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: slowreaderapp-streamlit
    command: >
      streamlit run src/app.py
        --server.port=8501
        --server.address=0.0.0.0
    environment:
      - NEO4J_MCP_URL=http://neo4j_mcp:8080/api/mcp/
      - OLLAMA_HOST=http://host.docker.internal:11434
      - PYTHONPATH=/app
    volumes:
      - .:/app
    env_file:
      - .env
    ports:
      - "8501:8501"
    depends_on:
      neo4j_mcp:
        condition: service_started
    restart: unless-stopped
    networks:
      - backend

networks:
  backend:
    driver: bridge